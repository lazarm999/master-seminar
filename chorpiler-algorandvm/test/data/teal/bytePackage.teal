#pragma version 10

#define TOKEN_STATE byte ""
#define RANGE int 8

#define OFFSET txna ApplicationArgs 0; btoi; RANGE; *; 
#define EXTRACT OFFSET; RANGE; extract3; btoi; // extracts S[OFFSET;BYTES]

txn ApplicationID
int 0 
==
bnz create

// TOKEN_STATE // needed later
TOKEN_STATE
TOKEN_STATE // "s", "s"
app_global_get // "s", byte

dup // "s", byte, byte

EXTRACT // "s", byte, int

int 1
~
&
int 128 
|

// Test
// switch stack positions for replace 3
store 0
OFFSET
load 0
// "s", byte, Offset, int
itob // "s", byte (A), int (B), byte (C)
replace3 // "s", byte
app_global_put //


int 1
return 


create: // "s"
TOKEN_STATE
byte "\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01"
app_global_put
int 1